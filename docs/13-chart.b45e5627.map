{"version":3,"sources":["13-chart.js"],"names":["margin","width","height","svg","d3","select","append","attr","xPositionScale","scaleLinear","domain","range","yPositionScale","scaleBand","colorScale","scaleOrdinal","csv","then","ready","datapoints","names","map","d","name","selectAll","data","enter","animal","hamburgers","bandwidth","yAxis","axisLeft","call","xAxis","axisBottom","catch","err","log"],"mappings":";CACA,WAGMA,IAAAA,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GAEjDC,EAAQ,IAAMD,EAAcA,EAE5BE,EAAS,IAAMF,EAAaA,EAE5BG,EAAMC,GACPC,OAAO,YACPC,OAAO,OACPC,KAAK,QAASN,EAAQD,EAAcA,GACpCO,KAAK,SAAUL,EAASF,EAAaA,GACrCM,OAAO,KACPC,KAAK,YAAa,aAAeP,EAAc,IAAMA,EAAa,KAGjEQ,EAAiBJ,GAClBK,cACAC,OAAO,CAAC,EAAG,KACXC,MAAM,CAAC,EAAGV,IAETW,EAAiBR,GAAGS,YAAYF,MAAM,CAACT,EAAQ,IAE/CY,EAAaV,GACdW,eACAL,OAAO,CAAC,MAAO,MAAO,QACtBC,MAAM,CAAC,OAAQ,SAAU,SAEzBK,GAAAA,IAAI,mBACJC,KAKMC,SAAMC,GAETC,IAAAA,EAAQD,EAAWE,IAAI,SAASC,GAC3BA,OAAAA,EAAEC,OAGIb,EAAAA,OAAOU,GAGnBI,EAAAA,UAAU,QACVC,KAAKN,GACLO,QACApB,OAAO,QACPC,KAAK,OAAQ,SAASe,GACdR,OAAAA,EAAWQ,EAAEK,UAErBpB,KAAK,IAAK,SAASe,GACXV,OAAAA,EAAeU,EAAEC,QAEzBhB,KAAK,QAAS,SAASe,GACfd,OAAAA,EAAec,EAAEM,cAEzBrB,KAAK,SAAUK,EAAeiB,aAE7BC,IAAAA,EAAQ1B,GAAG2B,SAASnB,GAErBN,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdyB,KAAKF,GAEJG,IAAAA,EAAQ7B,GAAG8B,WAAW1B,GAEvBF,EAAAA,OAAO,KACPC,KAAK,QAAS,eACdA,KAAK,YAAa,eAAiBL,EAAS,KAC5C8B,KAAKC,KAvCPE,MAAM,SAASC,GACNC,QAAAA,IAAI,cAAeD,KAjCjC","file":"13-chart.b45e5627.map","sourceRoot":"../src","sourcesContent":["/* global d3 */\n(function() {\n  // Build your SVG here\n  // using all of that cut-and-paste magic\n  var margin = { top: 50, right: 50, bottom: 50, left: 80 }\n\n  var width = 400 - margin.left - margin.right\n\n  var height = 400 - margin.top - margin.bottom\n\n  var svg = d3\n    .select('#chart13')\n    .append('svg')\n    .attr('width', width + margin.left + margin.right)\n    .attr('height', height + margin.top + margin.bottom)\n    .append('g')\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\n\n  // Build your scales here\n  var xPositionScale = d3\n    .scaleLinear()\n    .domain([0, 10])\n    .range([0, width])\n\n  var yPositionScale = d3.scaleBand().range([height, 0])\n\n  var colorScale = d3\n    .scaleOrdinal()\n    .domain(['dog', 'cow', 'cat'])\n    .range(['grey', 'yellow', 'blue'])\n\n  d3.csv('eating-data.csv')\n    .then(ready)\n    .catch(function(err) {\n      console.log('Failed with', err)\n    })\n\n  function ready(datapoints) {\n    // Add and style your marks here\n    var names = datapoints.map(function(d) {\n      return d.name\n    })\n\n    yPositionScale.domain(names)\n\n    svg\n      .selectAll('rect')\n      .data(datapoints)\n      .enter()\n      .append('rect')\n      .attr('fill', function(d) {\n        return colorScale(d.animal)\n      })\n      .attr('y', function(d) {\n        return yPositionScale(d.name)\n      })\n      .attr('width', function(d) {\n        return xPositionScale(d.hamburgers)\n      })\n      .attr('height', yPositionScale.bandwidth())\n\n    var yAxis = d3.axisLeft(yPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis y-axis')\n      .call(yAxis)\n\n    var xAxis = d3.axisBottom(xPositionScale)\n    svg\n      .append('g')\n      .attr('class', 'axis x-axis')\n      .attr('transform', 'translate(0,' + height + ')')\n      .call(xAxis)\n  }\n})()"]}